{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Danyal\\\\Desktop\\\\IndustryTeam6\\\\SoftwareCode\\\\Frontend\\\\TimerComponent\\\\src\\\\index.js\";\nimport * as React from \"react\";\nimport styled from 'styled-components';\nimport { createGlobalStyle } from 'styled-components';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\";\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Passion+One&display=swap');\n  body {\n    background-color:  #7E549F;\n    font-family: 'Passion One', cursive;\n    overflow: hidden;\n    text-align: center;\n    font: 50px;\n  }\n`;\nexport const Grid = styled.div`\n\n`;\nexport const Row = styled.div`\ndisplay: flex;\n`;\nexport const Col = styled.div`\nflex: ${props => props.size};\n`;\nexport const progressdiv = styled.div`\n  background-color: rgb(233, 233, 233);\n  border-radius: 2rem;\n`;\nexport const progress = styled.div`\n  background: rgb(24, 204, 147);\n  background: linear-gradient(\n    90deg,\n    rgba(210, 0, 160, 1) 0%,\n    rgba(210, 0, 160, 0.6264880952380952) 52%,\n    rgba(210, 0, 160, 0.4332107843137255) 100%\n  );\n\n  height: 20px;\n  transition: 1s linear;\n  transition-delay: 0s;\n  border-radius: 2rem;\n`;\nexport const progressComp = styled.h1`\n  font-size: 10px;\n`;\nexport const percentnumber = styled.div`\n  color: rgb(121, 121, 121);\n`;\nexport const countdown = styled.div`\n    font-size: 24pt;\n`;\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      percent: 1425\n    };\n\n    this.updateProgress = (field, val) => {\n      this.setState({\n        [field]: val\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(GlobalStyle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      size: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Timer, {\n      width: \"auto\",\n      percent: this.state.percent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      size: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      size: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }))))));\n  }\n\n}\n\nexport var Timer = ({\n  width,\n  percent,\n  status\n}) => {\n  const [value, setValue] = React.useState(1425);\n  React.useEffect(() => {\n    //setValue(percent * width);\n    value > 0 && setTimeout(() => setValue(value - percent / 15), 1000);\n  }, [value]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progressComp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"percent-number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, status), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-div\",\n    style: {\n      width: width\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      width: `${value}px`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"countdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }, \" \", 15))));\n};\nexport default App;\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 1\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Danyal/Desktop/IndustryTeam6/SoftwareCode/Frontend/TimerComponent/src/index.js"],"names":["React","styled","createGlobalStyle","ReactDOM","GlobalStyle","Grid","div","Row","Col","props","size","progressdiv","progress","progressComp","h1","percentnumber","countdown","App","Component","state","percent","updateProgress","field","val","setState","render","Timer","width","status","value","setValue","useState","useEffect","setTimeout","document","getElementById"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { createGlobalStyle } from 'styled-components'\r\nimport ReactDOM from 'react-dom';\r\nimport \"./index.css\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Passion+One&display=swap');\r\n  body {\r\n    background-color:  #7E549F;\r\n    font-family: 'Passion One', cursive;\r\n    overflow: hidden;\r\n    text-align: center;\r\n    font: 50px;\r\n  }\r\n`;\r\n\r\nexport const Grid = styled.div`\r\n\r\n`;\r\n\r\nexport const Row = styled.div`\r\ndisplay: flex;\r\n`;\r\n\r\nexport const Col = styled.div`\r\nflex: ${(props) => props.size};\r\n`;\r\n\r\nexport const progressdiv = styled.div`\r\n  background-color: rgb(233, 233, 233);\r\n  border-radius: 2rem;\r\n`;\r\n\r\nexport const progress = styled.div`\r\n  background: rgb(24, 204, 147);\r\n  background: linear-gradient(\r\n    90deg,\r\n    rgba(210, 0, 160, 1) 0%,\r\n    rgba(210, 0, 160, 0.6264880952380952) 52%,\r\n    rgba(210, 0, 160, 0.4332107843137255) 100%\r\n  );\r\n\r\n  height: 20px;\r\n  transition: 1s linear;\r\n  transition-delay: 0s;\r\n  border-radius: 2rem;\r\n`;\r\n\r\nexport const progressComp = styled.h1`\r\n  font-size: 10px;\r\n`;\r\n\r\nexport const percentnumber = styled.div`\r\n  color: rgb(121, 121, 121);\r\n`;\r\n\r\nexport const countdown = styled.div `\r\n    font-size: 24pt;\r\n`;\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n\r\n        percent: 1425\r\n\r\n\r\n\r\n    };\r\nupdateProgress = (field, val) => {\r\n    this.setState({ [field]: val });\r\n};\r\n\r\nrender() {\r\n    return (\r\n        <React.Fragment>\r\n        <GlobalStyle/>\r\n        <div className=\"App\">\r\n        <div className=\"div\">\r\n            <Grid>\r\n                <Row>\r\n                    <Col size={10}>\r\n                        <Timer width= 'auto' percent={this.state.percent} />\r\n                    </Col>\r\n                    <Col size={1}>\r\n                    </Col>\r\n                    <Col size={1}>\r\n                    </Col>\r\n                </Row>\r\n            </Grid>\r\n        </div>\r\n        </div>\r\n                </React.Fragment>\r\n\r\n\r\n    );\r\n}\r\n}\r\n\r\nexport var Timer = ({ width, percent, status }) => {\r\n    const [value, setValue] = React.useState(1425);\r\n\r\n    React.useEffect(() => {\r\n        //setValue(percent * width);\r\n        value > 0 && setTimeout(() => setValue(value - (percent/15)), 1000);\r\n    }, [value]);\r\n\r\n\r\n    return (\r\n        <div className={\"progressComp\"}>\r\n        <h1 className=\"percent-number\">{status}</h1>\r\n        <div className=\"progress-div\" style={{ width: width }}>\r\n\r\n        <div className=\"progress\" style={{ width: `${value}px` }}>\r\n\r\n                        <div className = \"countdown\"> {15}</div>\r\n\r\n\r\n</div>\r\n</div>\r\n</div>\r\n);\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n\r\nReactDOM.render(\r\n<App />,\r\ndocument.getElementById('root')\r\n);"]},"metadata":{},"sourceType":"module"}